{
  "version": 3,
  "sources": ["../../async-mutex/index.mjs"],
  "sourcesContent": ["const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._weightedQueues = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            if (!this._weightedQueues[weight - 1])\n                this._weightedQueues[weight - 1] = [];\n            this._weightedQueues[weight - 1].push({ resolve, reject });\n            this._dispatch();\n        });\n    }\n    runExclusive(callback, weight = 1) {\n        return __awaiter$2(this, void 0, void 0, function* () {\n            const [value, release] = yield this.acquire(weight);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve) => {\n            if (!this._weightedWaiters[weight - 1])\n                this._weightedWaiters[weight - 1] = [];\n            this._weightedWaiters[weight - 1].push(resolve);\n            this._dispatch();\n        });\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatch();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatch();\n    }\n    cancel() {\n        this._weightedQueues.forEach((queue) => queue.forEach((entry) => entry.reject(this._cancelError)));\n        this._weightedQueues = [];\n    }\n    _dispatch() {\n        var _a;\n        for (let weight = this._value; weight > 0; weight--) {\n            const queueEntry = (_a = this._weightedQueues[weight - 1]) === null || _a === void 0 ? void 0 : _a.shift();\n            if (!queueEntry)\n                continue;\n            const previousValue = this._value;\n            const previousWeight = weight;\n            this._value -= weight;\n            weight = this._value + 1;\n            queueEntry.resolve([previousValue, this._newReleaser(previousWeight)]);\n        }\n        this._drainUnlockWaiters();\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        for (let weight = this._value; weight > 0; weight--) {\n            if (!this._weightedWaiters[weight - 1])\n                continue;\n            this._weightedWaiters[weight - 1].forEach((waiter) => waiter());\n            this._weightedWaiters[weight - 1] = [];\n        }\n    }\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, void 0, void 0, function* () {\n            const [, releaser] = yield this._semaphore.acquire();\n            return releaser;\n        });\n    }\n    runExclusive(callback) {\n        return this._semaphore.runExclusive(() => callback());\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock() {\n        return this._semaphore.waitForUnlock();\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weight) => {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield sync.acquire(weight);\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weight) => {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                sync.waitForUnlock(weight).then(resolve);\n                setTimeout(() => reject(timeoutError), timeout);\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n"],
  "mappings": "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",
  "names": []
}
